---
title: Cerebliss Productivity App
title-block-banner: '#1C542D'
title-block-banner-color: "White"
author:
   - name: Sona James
     email: jesbysona@gmail.com
format:
    html:
        embed-resources: true
        html-math-method: katex
        theme: materia
        fontsize: 15px
        toc: true
        code-links:
            text: GitHub Repository Link
            icon: link-45deg
            href: https://github.com/sona-james/productivity-app.git
---

-   [LINK to FIGMA](https://www.figma.com/design/mH7BYSGSgtCCTgA4p7hfFb/Cerebliss?node-id=0-1&t=1W6okx3vkApIc9mh-1)

-   [LINK to Snack Editor](https://snack.expo.dev/@s_james/cerebliss_v10ap)

# Overview of (Cerebliss)

Cerebliss is a task-focused time management app designed to help users stay productive and organized by breaking their day down into small chunks of work. Each task includes a countdown timer to allow the user to stay engaged. The app includes flexibility, allowing users to adjust schedules, take breaks, and extend task durations as needed. Additionally, game-type features such as streaks and progress charts would make the productivity feel rewarding.

# Key features

The key features and the core functionalities are described below:

1.  **Scheduling Feature:** Create a full study schedule for the day or the week, including specific times and durations for each task.
2.  **Countdown Timer:** Customizable countdown timer that is associated with each task, which could be extended as needed.
3.  **Break Feature:** A pause and resume function that can be used while completing a task or after finishing one.
4.  **Notification Feature:** Sends notification a few minutes before the next task starts, when a break ends, or when the daily goal is reached.
5.  **Visualization Chart:** Visual representation of the productivity. Shows the percentage of completed tasks compared to the initially scheduled tasks for the day.
6.  **Streak Feature:** Tracks productivity streaks throughout the week when the user remains consistently productive. A streak is lost if the percentage of completed tasks falls below a certain percentage.
7.  **Music Player:** Using the Spotify API, users can connect to their account and play songs within the application. Displays the song title, artist name, a basic control features, such as pause, play, and skip.
8.  **Compete with Friends:** Users can add friends and compete in completing tasks. At the end of each schedule, the app displays who was more productive.

# Individual Screen details

The following section documents the individual screens of the application, the elements on each screen, and how the user is expected to interact with the screen.

\*\*NOTE: the following sections should be repeated for each of your screens, that is 2nd level screen name followed by a wireframe example and an as-built screen shot.

## Main screen - Dashboard Screen

The main screen serves as the central node for this application. All other screens return to this screen. This screen provides an overview of the day and progress.

### wireframe design

Below is my wireframe image. The main screen, called the dashboard screen, contains the app's core features and actions. When coding this, it is important to implement all the necessary features while keeping the page concise to avoid overwhelming users on their first interaction. This screen includes the options to start the timer, take a break (pause the timer), done (reset the timer), and extend timer.

![](./assets/p1.png){height="400" fig-align="center"}

### As-built screenshot

Here is a screen shot of the image I created running on my phone.

![](./assets/screen1.jpg){height="400" fig-align="center"}

## Second Screen - Focus Screen

The focus includes just the timer and the associated actions, lists the current task, next task, and lastly the spotify app music controls.

### wireframe design

Below is my wireframe image. This screen, has the necessary features the users need while working on a specific task. When coding this, it is important to ensure smooth interaction so users can focus on completing their tasks rather than figuring out how to navigate the appâ€™s features. This has the most of the features from the dashboard screen. The timer syncs across both the screens.

![](./assets/p2.png){height="400" fig-align="center"}

### As-built screenshot

Here is a screen shot of the image I created running on my phone.

::: {#fig-focusscreen layout-ncol="2"}
![Top](./assets/screen2a.jpg){height="400"}

![Bottom](./assets/screen2b.jpg){height="400"}

Focus Screen
:::

## Third Screen - Schedule SetUp Screen

The Schedule SetUp screen allows the users to add tasks, reorganize tasks, and plan their schedule.

### wireframe design

Below is my wireframe image. This screen allows users to schedule their tasks for the day, edit them, and rearrange them as needed. When coding this, it is important to implement the edit feature properly to ensure users have the flexibility to manage their tasks efficiently.

![](./assets/p3.png){height="400" fig-align="center"}

### As-built screenshot

Here is a screen shot of the image I created running on my phone.

![](./assets/screen3.jpg){height="400" fig-align="center"}

## Fourth Screen - Streaks Screen

The streaks screen displays streaks, charts, and progress tracking.

### wireframe design

Below is my wireframe image. This screen is primarily focused on the users productivity. When coding this screen, it is important to make sure that the layout is well-organized and visually motivation. The design should inspire users to stay productive and engaged.

![](./assets/p4.png){height="400" fig-align="center"}

### As-built screenshot

Here is a screen shot of the image I created running on my phone.

![](./assets/screen4.jpg){height="400" fig-align="center"}

## Fifth Screen - Settings Screen

The settings screen enables customization, reminders, and other personalization options to enhance the user experience.

### wireframe design

Below is my wireframe image. This screen currently only contains the basic operations that this app might need. When coding this screen, it is important to arrange the options in a way that allows users to easily choose what they need without excessive scrolling. At the moment, there are only three options, which makes the selection straightforward. But, in the future, these options should be organized in alphabetical order for better navigation.

![](./assets/p5.png){height="400" fig-align="center"}

### As-built screenshot

Here is a screen shot of the image I created running on my phone.

::: {#fig-settingsscreen layout-ncol="2"}
![Main](./assets/screen5.jpg){#fig1 height="400"}

![Inside Account](./assets/settings2.jpg){#fig2 height="400"}

Settings Screen
:::

# Snack code for the application

```{=html}
<div data-snack-id="@s_james/cerebliss_v10ap" data-snack-platform="web" data-snack-preview="true" data-snack-theme="light" style="overflow:hidden;background:#fbfcfd;border:1px solid var(--color-border);border-radius:4px;height:505px;width:100%"></div>
<script async src="https://snack.expo.dev/embed.js"></script>
```